# ==== Kafka SSL ==== #
kafka.bootstrap.servers=kafka1:31013
kafka.group.id=[Kafka Group ID]
kafka.ssl.truststore.location=[SSL Truststore location]
kafka.ssl.truststore.password=[SSL Truststore password]
kafka.ssl.keystore.location=[SSL Keystore location]
kafka.ssl.keystore.password=[SSL Keystore password]
kafka.security.protocol=SSL


# ==== Domain-based sources ==== #
# The maximum out-of-orderness time for the domain-based Kafka sources.
# Set to zero if the timestamps are always monotonously rising.
dn.max.out.of.orderness.ms=1000

# The idleness time (in seconds) for the domain-based Kafka sources.
# If no records flow in a partition of a stream for this amount of time, then that partition is considered "idle"
# and will not hold back the progress. In high-flow scenarios, this can be set to zero.
dn.idleness.sec=0

# ==== IP-based sources ==== #
# The maximum out-of-orderness time for the IP-based Kafka sources.
# Set to zero if the timestamps are always monotonously rising.
ip.max.out.of.orderness.ms=1000

# The idleness time (in seconds) for the IP-based Kafka sources.
# If no records flow in a partition of a stream for this amount of time, then that partition is considered "idle"
# and will not hold back the progress. In high-flow scenarios, this can be set to zero.
ip.idleness.sec=0

# ==== Domain-based data merging ==== #
# The time (in ms) to wait for potential updates to a domain-data aggregate entry that has already been finalized.
# Setting this to a higher value increases per-entry latency.
dn.finished.entry.grace.period.ms=5000

# The time (in ms) to wait after the last update to a domain-data aggregate entry before it is produced
# even if it is not finished. This should be set to a value higher than the maximum expected time before
# a collector response; however, setting it too high will cause large amounts of retained state data.
dn.max.entry.lifetime.ms=60000

# ==== IP-based data merging ==== #
# The time (in ms) to wait for potential updates to a final merged data entry that has already been finalized.
# Setting this to a higher value increases the per-domain latency.
ip.finished.entry.grace.period.ms=5000

# The time (in ms) to wait after the last domain-data aggregate update before an unfinished final merged data entry
# is produced. This should be set to a value higher than the maximum expected time between the last DN-based
# collector result and the first IP-based collector result for the same domain; however, setting it too high will
# increase the per-domain latency and can cause large amounts of retained state data.
ip.max.entry.lifetime.after.domain.data.ms=10000

# The time (in ms) to wait after the last IP-based collector result before an unfinished final merged data entry
# is produced. This should be set to a value higher than the maximum expected time between the first and the
# last IP-based collector result for a single IP; however, setting it too high will increase the per-domain latency
# and can cause large amounts of retained state data.
ip.max.entry.lifetime.after.ip.data.ms=60000

# The maximum time (in ms) to wait for the domain-based data blob to arrive to the final merger if an IP-based
# collector result arrives first.
ip.wait.for.domain.data.ms=60000

# ==== Experimental ==== #
# An EXPERIMENTAL option to completely remove the notion of the NERD collector from the merger.
# When true, the merger will not wait for NERD results and will silently drop them if they come.
# This option will likely be removed in the future.
ip.disable.nerd=false
